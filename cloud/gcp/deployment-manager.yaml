resources:
- name: porw-vpc
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: false

- name: porw-subnet
  type: compute.v1.subnetwork
  properties:
    network: $(ref.porw-vpc.selfLink)
    region: us-central1
    ipCidrRange: 10.0.0.0/24

- name: porw-firewall
  type: compute.v1.firewall
  properties:
    network: $(ref.porw-vpc.selfLink)
    sourceRanges: ["0.0.0.0/0"]
    allowed:
    - IPProtocol: TCP
      ports: ["22", "8080", "8333", "3000", "3500"]

- name: porw-blockchain-node
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: zones/us-central1-a/machineTypes/e2-medium
    networkInterfaces:
    - network: $(ref.porw-vpc.selfLink)
      subnetwork: $(ref.porw-subnet.selfLink)
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
        diskSizeGb: 20
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          apt-get update
          apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce docker-ce-cli containerd.io
          
          # Install Docker Compose
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          
          # Create data directory
          mkdir -p /data/porw
          
          # Create docker-compose.yml
          cat > /data/porw/docker-compose.yml << 'EOF'
          version: '3'
          services:
            porw-node:
              image: porwblockchain/porw-node:latest
              container_name: porw-node
              ports:
                - "8333:8333"
                - "8080:8080"
              volumes:
                - porw-data:/data
              restart: unless-stopped
              command: start
          
          volumes:
            porw-data:
          EOF
          
          # Start the blockchain node
          cd /data/porw
          docker-compose up -d

- name: porw-mining-node
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: zones/us-central1-a/machineTypes/n1-standard-4
    networkInterfaces:
    - network: $(ref.porw-vpc.selfLink)
      subnetwork: $(ref.porw-subnet.selfLink)
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
        diskSizeGb: 30
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          apt-get update
          apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce docker-ce-cli containerd.io
          
          # Install Docker Compose
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          
          # Create data directory
          mkdir -p /data/porw-mining
          mkdir -p /data/porw-mining/protein_data
          
          # Get blockchain node internal IP
          BLOCKCHAIN_NODE_IP=$(gcloud compute instances describe porw-blockchain-node --zone=us-central1-a --format='get(networkInterfaces[0].networkIP)')
          
          # Create docker-compose.yml
          cat > /data/porw-mining/docker-compose.yml << EOF
          version: '3'
          services:
            porw-mining-node:
              image: porwblockchain/porw-mining-node:latest
              container_name: porw-mining-node
              ports:
                - "3000:3000"
              volumes:
                - porw-mining-data:/data
                - porw-protein-data:/data/protein_data
              restart: unless-stopped
              environment:
                - NODE_HOST=0.0.0.0
                - P2P_PORT=3000
                - ENABLE_MINING=true
                - MINING_THREADS=4
                - ENABLE_GPU=true
                - BOOTSTRAP_NODE=${BLOCKCHAIN_NODE_IP}:8333
          
          volumes:
            porw-mining-data:
            porw-protein-data:
          EOF
          
          # Start the mining node
          cd /data/porw-mining
          docker-compose up -d

- name: porw-storage-disk
  type: compute.v1.disk
  properties:
    zone: us-central1-a
    sizeGb: 100
    type: zones/us-central1-a/diskTypes/pd-ssd

- name: porw-storage-node
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: zones/us-central1-a/machineTypes/e2-standard-2
    networkInterfaces:
    - network: $(ref.porw-vpc.selfLink)
      subnetwork: $(ref.porw-subnet.selfLink)
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
        diskSizeGb: 20
    - deviceName: storage-disk
      source: $(ref.porw-storage-disk.selfLink)
      autoDelete: false
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          apt-get update
          apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce docker-ce-cli containerd.io
          
          # Format and mount the storage disk
          mkfs.ext4 -m 0 -E lazy_itable_init=0,lazy_journal_init=0,discard /dev/disk/by-id/google-storage-disk
          mkdir -p /data/porw-storage/storage
          mount -o discard,defaults /dev/disk/by-id/google-storage-disk /data/porw-storage/storage
          echo "/dev/disk/by-id/google-storage-disk /data/porw-storage/storage ext4 discard,defaults 0 2" >> /etc/fstab
          
          # Install Docker Compose
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          
          # Get blockchain node internal IP
          BLOCKCHAIN_NODE_IP=$(gcloud compute instances describe porw-blockchain-node --zone=us-central1-a --format='get(networkInterfaces[0].networkIP)')
          
          # Create docker-compose.yml
          cat > /data/porw-storage/docker-compose.yml << EOF
          version: '3'
          services:
            porw-storage-node:
              image: porwblockchain/porw-storage-node:latest
              container_name: porw-storage-node
              ports:
                - "3500:3500"
              volumes:
                - /data/porw-storage/storage:/data/storage
              restart: unless-stopped
              environment:
                - NODE_HOST=${BLOCKCHAIN_NODE_IP}
                - NODE_PORT=8333
                - STORAGE_PORT=3500
                - MAX_STORAGE=102400
                - MIN_REPLICATION=3
          EOF
          
          # Start the storage node
          cd /data/porw-storage
          docker-compose up -d

outputs:
- name: blockchain_node_external_ip
  value: $(ref.porw-blockchain-node.networkInterfaces[0].accessConfigs[0].natIP)
- name: web_interface_url
  value: http://$(ref.porw-blockchain-node.networkInterfaces[0].accessConfigs[0].natIP):8080
- name: mining_node_external_ip
  value: $(ref.porw-mining-node.networkInterfaces[0].accessConfigs[0].natIP)
- name: storage_node_external_ip
  value: $(ref.porw-storage-node.networkInterfaces[0].accessConfigs[0].natIP)
