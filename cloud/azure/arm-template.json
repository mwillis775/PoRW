{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Environment name (e.g., dev, staging, prod)"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "blockchainNodeVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the blockchain node VM."
      }
    },
    "miningNodeVmSize": {
      "type": "string",
      "defaultValue": "Standard_F8s_v2",
      "metadata": {
        "description": "Size of the mining node VM."
      }
    },
    "storageNodeVmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v3",
      "metadata": {
        "description": "Size of the storage node VM."
      }
    },
    "storageDiskSizeGB": {
      "type": "int",
      "defaultValue": 100,
      "minValue": 20,
      "maxValue": 1000,
      "metadata": {
        "description": "Size of the storage disk in GB."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vnetName": "[concat(parameters('environmentName'), '-porw-vnet')]",
    "subnetName": "[concat(parameters('environmentName'), '-porw-subnet')]",
    "blockchainNodeName": "[concat(parameters('environmentName'), '-porw-blockchain-node')]",
    "miningNodeName": "[concat(parameters('environmentName'), '-porw-mining-node')]",
    "storageNodeName": "[concat(parameters('environmentName'), '-porw-storage-node')]",
    "networkSecurityGroupName": "[concat(parameters('environmentName'), '-porw-nsg')]",
    "publicIPAddressNameBlockchain": "[concat(variables('blockchainNodeName'), '-ip')]",
    "publicIPAddressNameMining": "[concat(variables('miningNodeName'), '-ip')]",
    "publicIPAddressNameStorage": "[concat(variables('storageNodeName'), '-ip')]",
    "nicNameBlockchain": "[concat(variables('blockchainNodeName'), '-nic')]",
    "nicNameMining": "[concat(variables('miningNodeName'), '-nic')]",
    "nicNameStorage": "[concat(variables('storageNodeName'), '-nic')]",
    "storageDiskName": "[concat(variables('storageNodeName'), '-disk')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[variables('vnetName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 1000,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "BlockchainAPI",
            "properties": {
              "priority": 1010,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8080"
            }
          },
          {
            "name": "BlockchainP2P",
            "properties": {
              "priority": 1020,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8333"
            }
          },
          {
            "name": "MiningP2P",
            "properties": {
              "priority": 1030,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3000"
            }
          },
          {
            "name": "StorageP2P",
            "properties": {
              "priority": 1040,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3500"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIPAddressNameBlockchain')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(variables('blockchainNodeName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIPAddressNameMining')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(variables('miningNodeName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIPAddressNameStorage')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(variables('storageNodeName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('nicNameBlockchain')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameBlockchain'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameBlockchain'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('nicNameMining')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameMining'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameMining'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('nicNameStorage')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameStorage'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameStorage'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-06-01",
      "name": "[variables('storageDiskName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Premium_LRS"
      },
      "properties": {
        "creationData": {
          "createOption": "Empty"
        },
        "diskSizeGB": "[parameters('storageDiskSizeGB')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[variables('blockchainNodeName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameBlockchain'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('blockchainNodeVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('blockchainNodeName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 30
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameBlockchain'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "apiVersion": "2020-06-01",
          "name": "CustomScript",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('blockchainNodeName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.1",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/mwillis775/PoRW-PoRS/main/cloud/azure/scripts/setup-blockchain-node.sh"
              ],
              "commandToExecute": "bash setup-blockchain-node.sh"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[variables('miningNodeName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameMining'))]",
        "[resourceId('Microsoft.Compute/virtualMachines', variables('blockchainNodeName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('miningNodeVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('miningNodeName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 30
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameMining'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "apiVersion": "2020-06-01",
          "name": "CustomScript",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('miningNodeName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.1",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/mwillis775/PoRW-PoRS/main/cloud/azure/scripts/setup-mining-node.sh"
              ],
              "commandToExecute": "[concat('bash setup-mining-node.sh ', reference(variables('nicNameBlockchain')).ipConfigurations[0].properties.privateIPAddress)]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[variables('storageNodeName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameStorage'))]",
        "[resourceId('Microsoft.Compute/disks', variables('storageDiskName'))]",
        "[resourceId('Microsoft.Compute/virtualMachines', variables('blockchainNodeName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('storageNodeVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('storageNodeName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 30
          },
          "dataDisks": [
            {
              "lun": 0,
              "createOption": "Attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks', variables('storageDiskName'))]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameStorage'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "apiVersion": "2020-06-01",
          "name": "CustomScript",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('storageNodeName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.1",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/mwillis775/PoRW-PoRS/main/cloud/azure/scripts/setup-storage-node.sh"
              ],
              "commandToExecute": "[concat('bash setup-storage-node.sh ', reference(variables('nicNameBlockchain')).ipConfigurations[0].properties.privateIPAddress, ' ', parameters('storageDiskSizeGB'))]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "blockchainNodeFQDN": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressNameBlockchain')).dnsSettings.fqdn]"
    },
    "blockchainNodeIP": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressNameBlockchain')).ipAddress]"
    },
    "webInterfaceURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressNameBlockchain')).dnsSettings.fqdn, ':8080')]"
    },
    "miningNodeFQDN": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressNameMining')).dnsSettings.fqdn]"
    },
    "storageNodeFQDN": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressNameStorage')).dnsSettings.fqdn]"
    }
  }
}
